security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: argon2id
    providers:
        app_user_provider:
            id: Infrastructure\Security\Provider\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        manager_login:
            pattern: ^/manager/login
            stateless: false
            form_login:
                login_path: manager_login
                check_path: manager_login
                default_target_path: manager_dashboard
                username_parameter: email
                password_parameter: password

        manager:
            pattern: ^/manager
            stateless: true
            jwt: ~
#            json_login:
#                failure_handler: Infrastructure\Security\Handler\ManagerJwtFailureHandler

    access_control:
        - { path: ^/manager/login, roles: [IS_AUTHENTICATED_ANONYMOUSLY] }
        - { path: ^/manager, roles: [ROLE_MANAGER, IS_AUTHENTICATED_FULLY] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
